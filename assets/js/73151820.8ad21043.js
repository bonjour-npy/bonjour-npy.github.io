"use strict";(self.webpackChunknpy_notebook=self.webpackChunknpy_notebook||[]).push([[9203],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,k=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(k,a(a({ref:n},u),{},{components:t})):r.createElement(k,a({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2823:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={},a="GeekOS project 0\u7684\u5b9e\u73b0",c={unversionedId:"Curriculum/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/GeekOS-project-0",id:"Curriculum/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/GeekOS-project-0",title:"GeekOS project 0\u7684\u5b9e\u73b0",description:"\u5728\u4e0a\u4e00\u7bc7\u535a\u5ba2\u4e2d\u6211\u4eec\u5b8c\u6210\u4e86GeekOS\u73af\u5883\u7684\u914d\u7f6e\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u9a8c\u8bc1\u73af\u5883\u914d\u7f6e\u7684\u6210\u529f\u4e0e\u5426\u4ee5\u53caproject 0\u7684\u5b9e\u73b0\u3002",source:"@site/docs/Curriculum/4-\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/2-GeekOS-project-0.md",sourceDirName:"Curriculum/4-\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe",slug:"/Curriculum/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/GeekOS-project-0",permalink:"/docs/Curriculum/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/GeekOS-project-0",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"curriculum",previous:{title:"Linux \u7cfb\u7edf\u4e0b GeekOS \u7684\u73af\u5883\u914d\u7f6e",permalink:"/docs/Curriculum/\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u8bbe/Environment-Configuration"}},l={},s=[{value:"\u7f16\u5199C\u8bed\u8a00\u4ee3\u7801",id:"\u7f16\u5199c\u8bed\u8a00\u4ee3\u7801",level:2},{value:"\u4f7f\u7528Linux\u7684\u7f16\u8bd1\u7cfb\u7edf\u5bf9C\u8bed\u8a00\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1",id:"\u4f7f\u7528linux\u7684\u7f16\u8bd1\u7cfb\u7edf\u5bf9c\u8bed\u8a00\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1",level:2}],u={toc:s},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geekos-project-0\u7684\u5b9e\u73b0"},"GeekOS project 0\u7684\u5b9e\u73b0"),(0,o.kt)("p",null,"\u5728\u4e0a\u4e00\u7bc7\u535a\u5ba2\u4e2d\u6211\u4eec\u5b8c\u6210\u4e86GeekOS\u73af\u5883\u7684\u914d\u7f6e\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u9a8c\u8bc1\u73af\u5883\u914d\u7f6e\u7684\u6210\u529f\u4e0e\u5426\u4ee5\u53caproject 0\u7684\u5b9e\u73b0\u3002"),(0,o.kt)("h2",{id:"\u7f16\u5199c\u8bed\u8a00\u4ee3\u7801"},"\u7f16\u5199C\u8bed\u8a00\u4ee3\u7801"),(0,o.kt)("p",null,"\u7f16\u5199geekos-version/src/projecti/src/geekos/main.c\u6587\u4ef6"),(0,o.kt)("p",null,"\u7f16\u5199\u51fd\u6570project0\u5b9e\u73b0\u68c0\u6d4b\u952e\u76d8\u8f93\u5165Ctrl+d\u7ed3\u675f\u7ebf\u7a0b\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"void project0(){\n    Print(\"To Exit hit Ctrl + d.\\n\");\n    Keycode keycode;\n    while(1)\n    {\n        if(Read_Key(&keycode))\n        {\n            if(!((keycode & KEY_SPECIAL_FLAG) || (keycode & KEY_RELEASE_FLAG)))// \u4e0d\u662f\u7279\u6b8a\u952e\u6216\u8005\u5f39\u8d77\n            {\n                int asciiCode = keycode & 0xff;//d\n                if((keycode & KEY_CTRL_FLAG)==KEY_CTRL_FLAG && asciiCode=='d')//ctrl+d\n                {\n                    Print(\"\\n---------Adios!---------\\n\");\n                    # \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7d20\u8d28\n                    Exit(1);\n                }else\n                {\n                    Print(\"%c\",(asciiCode=='\\r') ? '\\n' : asciiCode);\n                }\n            }\n        }\n    }\n}\n")),(0,o.kt)("p",null,"\u5728main\u51fd\u6570\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5b9e\u73b0\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8c03\u7528\uff0c\u521b\u5efa\u7ebf\u7a0b\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"    struct Kernel_Thread *thread;\n    thread = Start_Kernel_Thread(&project0,0,PRIORITY_NORMAL,false);\n")),(0,o.kt)("p",null,"\u603b\u4f53\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n * GeekOS C code entry point\n * Copyright (c) 2001,2003,2004 David H. Hovemeyer <daveho@cs.umd.edu>\n * Copyright (c) 2003, Jeffrey K. Hollingsworth <hollings@cs.umd.edu>\n * Copyright (c) 2004, Iulian Neamtiu <neamtiu@cs.umd.edu>\n * $Revision: 1.51 $\n * \n * This is free software.  You are permitted to use,\n * redistribute, and modify it as specified in the file "COPYING".\n */\n\n#include <geekos/bootinfo.h>\n#include <geekos/string.h>\n#include <geekos/screen.h>\n#include <geekos/mem.h>\n#include <geekos/crc32.h>\n#include <geekos/tss.h>\n#include <geekos/int.h>\n#include <geekos/kthread.h>\n#include <geekos/trap.h>\n#include <geekos/timer.h>\n#include <geekos/keyboard.h>\n\nvoid project0(){\n    Print("To Exit hit Ctrl + d.\\n");\n    Keycode keycode;\n    while(1)\n    {\n        if(Read_Key(&keycode))\n        {\n            if(!((keycode & KEY_SPECIAL_FLAG) || (keycode & KEY_RELEASE_FLAG)))// \u4e0d\u662f\u7279\u6b8a\u952e\u6216\u8005\u5f39\u8d77\n            {\n                int asciiCode = keycode & 0xff;//d\n                if((keycode & KEY_CTRL_FLAG)==KEY_CTRL_FLAG && asciiCode==\'d\')//ctrl+d\n                {\n                    Print("\\n---------Adios! Motherfucker!---------\\n");\n                    Exit(1);\n                }else\n                {\n                    Print("%c",(asciiCode==\'\\r\') ? \'\\n\' : asciiCode);\n                }\n            }\n        }\n    }\n}\n\n\n/*\n * Kernel C code entry point.\n * Initializes kernel subsystems, mounts filesystems,\n * and spawns init process.\n */\nvoid Main(struct Boot_Info* bootInfo)\n{\n    Init_BSS();\n    Init_Screen();\n    Init_Mem(bootInfo);\n    Init_CRC32();\n    Init_TSS();\n    Init_Interrupts();\n    Init_Scheduler();\n    Init_Traps();\n    Init_Timer();\n    Init_Keyboard();\n\n    Set_Current_Attr(ATTRIB(BLACK, GREEN|BRIGHT));\n    Print("Welcome to GeekOS!\\n");\n    Set_Current_Attr(ATTRIB(BLACK, GRAY));\n\n    // TODO("Start a kernel thread to echo pressed keys and print counts");\n\n    struct Kernel_Thread *thread;\n    thread = Start_Kernel_Thread(&project0,0,PRIORITY_NORMAL,false);\n\n    /* Now this thread is done. */\n    Exit(0);\n}\n')),(0,o.kt)("h2",{id:"\u4f7f\u7528linux\u7684\u7f16\u8bd1\u7cfb\u7edf\u5bf9c\u8bed\u8a00\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1"},"\u4f7f\u7528Linux\u7684\u7f16\u8bd1\u7cfb\u7edf\u5bf9C\u8bed\u8a00\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1"),(0,o.kt)("p",null,"\u6bcf\u4e00\u4e2a\u9879\u76ee\u7684\u7f16\u8bd1\u90fd\u5728geekos-version/src/projecti/build\u6587\u4ef6\u5939\u4e0b\u8fdb\u884c\uff0c\u5373\u8981\u5728\u7ec8\u7aef\u4e2d\u901a\u8fc7",(0,o.kt)("inlineCode",{parentName:"p"},"cd"),"\u8fdb\u5165\u8be5\u76ee\u5f55\u3002"),(0,o.kt)("p",null,"\u6267\u884c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make depend\nmake\n")),(0,o.kt)("p",null,"\u6b64\u65f6\uff0c\u8be5\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210bochs.out\u3001depend.mak\u4ee5\u53cafd.img\u6587\u4ef6\uff0cbochs.out\u6587\u4ef6\u662f\u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\uff0cdepend.mak\u662f\u7f16\u8bd1\u4e2d\u95f4\u751f\u6210\u7684\u6587\u4ef6\uff0c\u6700\u7ec8\u751f\u6210\u7684fd.img\u662f\u6700\u91cd\u8981\u7684GeekOS\u6620\u50cf\u6587\u4ef6\uff0c\u6709\u4e86\u5b83\u624d\u80fd\u4f7f\u7528bochs\u8fd0\u884cGeekOS\u64cd\u4f5c\u7cfb\u7edf\u3002",(0,o.kt)("strong",{parentName:"p"},"\u611f\u6069\u5b83\uff01")),(0,o.kt)("p",null,"\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5e94\u8be5\u662f\u8fd9\u6837\u7684\u7ed3\u6784\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/bonjour-npy/Image-Hosting-Service/main/typora_images/202304251431067.png",alt:null})),(0,o.kt)("p",null,"\u4e0b\u9762\u5c31\u53ef\u4ee5\u4f7f\u7528bochs\u8fd0\u884cGeekOS\u7cfb\u7edf\u4e86\uff0c\u53ef\u4ee5\u8bf4bochs\u7684\u8fd0\u884c\u4f9d\u8d56\u4e24\u4e2a\u6587\u4ef6\uff0c\u4e00\u4e2a\u662f",(0,o.kt)("strong",{parentName:"p"},"\u914d\u7f6e\u6587\u4ef6.bochsrc"),"\uff0c\u4e00\u4e2a\u662f",(0,o.kt)("strong",{parentName:"p"},"\u6620\u50cf\u6587\u4ef6fd.img"),"\uff0c\u6620\u50cf\u6587\u4ef6\u7684\u52a0\u8f7d\u8def\u5f84\u9700\u8981\u5728.bochsrc\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u5728\u73af\u5883\u914d\u7f6e\u7684\u535a\u5ba2\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\u3002\u8fd9\u91cc\u518d\u8d34\u4e00\u4e0b\u5185\u5bb9\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-makefile"},"# An example .bochsrc file.\n# You will need to edit these lines to reflect your system.\nvgaromimage: file=/usr/local/share/bochs/VGABIOS-lgpl-latest\n# \u8bf7\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\u66f4\u6539\nromimage: file=/usr/local/share/bochs/BIOS-bochs-latest\n# \u8bf7\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\u66f4\u6539\nmegs: 8\nboot: a\nfloppya: 1_44=fd.img, status=inserted\n#floppya: 1_44=fd_aug.img, status=inserted\nlog: ./bochs.out\n# keyboard_serial_delay: 200\n# vga_update_interval: 300000\nmouse: enabled=0\nprivate_colormap: enabled=0\n# i440fxsupport: enabled=0\n# Uncomment this to write all bochs debugging messages to\n# bochs.out.  This produces a lot of output, but can be very\n# useful for debugging the kernel.\n#debug: action=report\n")),(0,o.kt)("p",null,"\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u6267\u884c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bochs\n")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/bonjour-npy/Image-Hosting-Service/main/typora_images/202304251442853.png",alt:null})),(0,o.kt)("p",null,"\u9009\u62e96\uff0c\u6309\u4e0b\u56de\u8f66"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/bonjour-npy/Image-Hosting-Service/main/typora_images/202304251444987.png",alt:null})),(0,o.kt)("p",null,"\u53ef\u80fd\u4f1a\u51fa\u73b0\u9ed1\u5c4f\u60c5\u51b5\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fdb\u5165\u4e86\u8c03\u8bd5\u6a21\u5f0f\uff0c\u7ec8\u7aef\u6b63\u5728\u7b49\u5f85\u547d\u4ee4\uff0c\u5728\u7ec8\u7aef\u8f93\u5165"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"c\n")),(0,o.kt)("p",null,"\u5373\u53ef\u5b8c\u6210bochs\u7684\u6b63\u5f0f\u542f\u52a8\uff0c\u6700\u7ec8\u7684\u6548\u679c"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/bonjour-npy/Image-Hosting-Service/main/typora_images/202304251447741.png",alt:null})))}d.isMDXComponent=!0}}]);