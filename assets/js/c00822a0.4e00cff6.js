"use strict";(self.webpackChunknpy_notebook=self.webpackChunknpy_notebook||[]).push([[9507],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,y=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[m]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i="PyTorch\u57fa\u7840",p={unversionedId:"Deep-Learning/\u57fa\u7840\u77e5\u8bc6/PytorchBasics",id:"Deep-Learning/\u57fa\u7840\u77e5\u8bc6/PytorchBasics",title:"PyTorch\u57fa\u7840",description:"\u5e38\u7528\u51fd\u6570\u90e8\u5206",source:"@site/docs/Deep-Learning/3-\u57fa\u7840\u77e5\u8bc6/PytorchBasics.md",sourceDirName:"Deep-Learning/3-\u57fa\u7840\u77e5\u8bc6",slug:"/Deep-Learning/\u57fa\u7840\u77e5\u8bc6/PytorchBasics",permalink:"/docs/Deep-Learning/\u57fa\u7840\u77e5\u8bc6/PytorchBasics",draft:!1,editUrl:"https://github.com/bonjour-npy/bonjour-npy.github.io/tree/master/docs/Deep-Learning/3-\u57fa\u7840\u77e5\u8bc6/PytorchBasics.md",tags:[],version:"current",frontMatter:{},sidebar:"deep_learning",previous:{title:"\u6c60\u5316\u5c42",permalink:"/docs/Deep-Learning/\u57fa\u7840\u77e5\u8bc6/PoolingLayer"},next:{title:"\u6b63\u5219\u5316\u4e0e\u6743\u91cd\u8870\u9000",permalink:"/docs/Deep-Learning/\u57fa\u7840\u77e5\u8bc6/\u6b63\u5219\u5316\u4e0e\u6743\u91cd\u8870\u9000"}},c={},l=[{value:"\u5e38\u7528\u51fd\u6570\u90e8\u5206",id:"\u5e38\u7528\u51fd\u6570\u90e8\u5206",level:2}],s={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pytorch\u57fa\u7840"},"PyTorch\u57fa\u7840"),(0,a.kt)("h2",{id:"\u5e38\u7528\u51fd\u6570\u90e8\u5206"},"\u5e38\u7528\u51fd\u6570\u90e8\u5206"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"concat\u4e0estack\u51fd\u6570"),(0,a.kt)("p",{parentName:"li"},"stack\u51fd\u6570\u5bf9\u8f93\u5165\u7684\u4e24\u4e2a\u5f20\u91cf\u5728\u6307\u5b9a\u7684\u7ef4\u5ea6\u8fdb\u884c\u5806\u53e0\uff0c\u662f",(0,a.kt)("strong",{parentName:"p"},"\u521b\u5efa\u4e86\u65b0\u7684\u7ef4\u5ea6")),(0,a.kt)("p",{parentName:"li"},"concat\u51fd\u6570\u5bf9\u8f93\u5165\u7684\u5f20\u91cf\u5728\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u62fc\u63a5\uff0c\u6ca1\u6709\u521b\u5efa\u65b0\u7684\u7ef4\u5ea6"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# stack\u548cconcat\u51fd\u6570\na = torch.rand(4, 3)  # A\u73ed4\u4f4d\u540c\u5b66\uff0c\u6bcf\u4f4d\u540c\u5b663\u79d1\u6210\u7ee9\nb = torch.rand(4, 3)  # B\u73ed4\u4f4d\u540c\u5b66\uff0c\u6bcf\u4f4d\u540c\u5b663\u79d1\u6210\u7ee9\nc = torch.stack((a, b), dim=0)  # \u7406\u89e3\uff1a\u5e74\u7ea7\u6240\u6709\u540c\u5b66\u76843\u79d1\u6210\u7ee9\uff08\u5047\u8bbe\u5e74\u7ea7\u53ea\u6709A\u73ed\u548cB\u73ed\u4e24\u4e2a\u73ed\uff0c\u6bcf\u4e2a\u73ed\u53ea\u6709\u56db\u540d\u540c\u5b66\uff09\nprint(c.shape)  # torch.Size([2, 4, 3])\nd = torch.concat((a, b), dim=1)  # \u7406\u89e3\uff1aa\u662fA\u73ed4\u4f4d\u540c\u5b663\u79d1\u6210\u7ee9\uff0cb\u662f\u8fd94\u540d\u540c\u5b66\u5176\u4ed63\u95e8\u8bfe\u7684\u6210\u7ee9\uff0c\u62fc\u63a5\u540e\u4ee3\u8868\u8fd94\u540d\u540c\u5b66\u76846\u79d1\u6210\u7ee9\nprint(d.shape)  # torch.Size([4, 6])\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"list\u548ctensor\u4e58\u6cd5\u4e0d\u540c\u4e4b\u5904"),(0,a.kt)("p",{parentName:"li"},"list\u7684*\u4e58\u6cd5\u662f\u590d\u5236\u5143\u7d20\uff0c\u6539\u53d8list\u7684shape"),(0,a.kt)("p",{parentName:"li"},"tensor\u7684*\u4e58\u6cd5\u662f\u5bf9tensor\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u70b9\u4e58\u8ba1\u7b97"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},"a = torch.tensor([[3, 3, 3, 3]])\nb = [3]  # list\u7684*\u4e58\u662f\u590d\u5236\u5143\u7d20\u8fdb\u884c\u6269\u5c55\nprint(a * 3)  # tensor([[9, 9, 9, 9]])\nprint(b * 3)  # [3, 3, 3]\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u6700\u5927\u503c / \u6700\u5c0f\u503c\u7d22\u5f15\uff1aargmax / argmin"),(0,a.kt)("p",{parentName:"li"},"\u9700\u8981\u901a\u8fc7\u53c2\u6570dim\u6307\u5b9a\u64cd\u4f5c\u7684\u7ef4\u5ea6\uff0cdim\u7684\u7406\u89e3"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5b98\u65b9\u89e3\u91ca\uff1aThe dimension to reduce")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u4ee5\u4e8c\u7ef4\u5f20\u91cf\u4e3e\u4f8b\uff0cdim=1\u5373\u5728\u6bcf\u4e00\u884c\u4e2d\u9009\u51fa\u4e00\u4e2a\u6700\u5927\u503c / \u6700\u5c0f\u503c\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u7684shape\u5e94\u4e3a","[dim0, 1]","\uff0c\u5373reduce\u4e86dim=1\u7684\u7ef4\u5ea6"))),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# \u6700\u5927\u503c\u6700\u5c0f\u503c\u7d22\u5f15\na = torch.tensor([[0.1, 0.9, 0.3], [0.9, 0.8, 0.99], [0.1, 0.7, 0.8], [0.88, 0.1, 0.2]])  # [4, 3]\nprint("argmax output: ", a.argmax(dim=0), a.argmax(dim=1))  # argmax output:  tensor([1, 0, 1]) tensor([1, 2, 2, 0])\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Python zip\u51fd\u6570"),(0,a.kt)("p",{parentName:"li"},"zip\u51fd\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a\u538b\u7f29\uff0c\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u7684",(0,a.kt)("strong",{parentName:"p"},"\u6700\u5916\u5c42"),"\u5bf9\u5e94\u5143\u7d20\u538b\u7f29\u4e3a\u4e00\u4e2a\u65b0\u7684\u5143\u7d20"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},"a = torch.tensor([1, 2, 3])\nb = torch.tensor([4, 5, 6])\nc = zip(a, b)\nfor i in c:\n    print(i)\n'''\n(tensor(1), tensor(4))\n(tensor(2), tensor(5))\n(tensor(3), tensor(6))\n'''\na = torch.tensor([[1, 2, 3], [3, 2, 1]])\nb = torch.tensor([[4, 5, 6], [6, 5, 4]])\nc = zip(a, b)\nfor i in c:\n    print(i)\n'''\n(tensor([1, 2, 3]), tensor([4, 5, 6]))\n(tensor([3, 2, 1]), tensor([6, 5, 4]))\n'''\n")))))}u.isMDXComponent=!0}}]);